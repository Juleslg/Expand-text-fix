{%- if section.blocks.size > 0 -%}
<div class="{% unless section.settings.remove_vertical_spacing %}section-spacing{% endunless %} {% if section.settings.separate_section_with_border %}bordered-section{% endif %}">
  <div class="container container--{{ section.settings.content_width }} ">
    <div class="side-by-side-container">
      <div class="prose text-{{ section.settings.text_position }}">
        {%- assign is_inside_button_group_context = false -%}
        <div class="text-content">
        {%- for block in section.blocks -%}
          {%- if block.type == 'button' and is_inside_button_group_context == false -%}
            {%- assign is_inside_button_group_context = true -%}
            <div class="button-group justify-{{ section.settings.text_position }}">
          {%- elsif block.type != 'button' and is_inside_button_group_context -%}
            {%- assign is_inside_button_group_context = false -%}
            </div>
          {%- endif -%}

          {%- case block.type -%}
            {%- when 'subheading' 'heading' 'richtext' 'page' 'link' 'button' 'liquid' -%}
              <!-- Inline conditional rendering for various block types except 'image' -->
              <!-- Image blocks will not be nested inside this text-content div -->
            {%- endcase -%}
          {%- endfor -%}
        </div>
        {%- assign is_inside_button_group_context = false -%} <!-- Reset the context for safety -->
      </div>
      <!-- This is the new position for the media-content div to separate image content from text -->
      <div class="media-content">
        {%- for block in section.blocks -%}
          {%- if block.type == 'image' -%}
            {%- include 'image-block-logic' -%} <!-- Pseudocode: replace with actual logic for handling image blocks -->
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>
{%- endif -%}



<script>
document.addEventListener('DOMContentLoaded', function() {
// Hardcoded translations
var translations = {
  'en': {
    'open': 'learn more',
    'close': 'show less'
  },
  'de': {
    'open': 'mehr erfahren',
    'close': 'weniger anzeigen'
  },
  'fr': {
    'open': 'en savoir plus',
    'close': 'afficher moins'
  }
  // Add other languages and translations as needed
};

// Function to get the current language from the HTML tag
function getCurrentLang() {
  return document.documentElement.lang || 'en'; // Default to 'en' if lang attribute is not set
}

document.querySelectorAll('.expandButton{{ section.id }}').forEach(function(button) {
  button.addEventListener('click', function() {
    var currentLang = getCurrentLang(); // Get the current language
    var contentExpand = this.parentNode.querySelector('.content-expand{{ section.id }}');
    if (contentExpand.style.display === 'none' || contentExpand.style.display === '') {
      contentExpand.style.display = 'block';
      this.textContent = translations[currentLang]['close']; // Use the hardcoded translation for 'close'
    } else {
      contentExpand.style.display = 'none';
      this.textContent = translations[currentLang]['open']; // Use the hardcoded translation for 'open'
    }
  });
});
});
</script>
<style>
.content-expand{{ section.id }}{
  display: none;
}
.expand_button{
text-decoration: underline;

}
.margins_expand_button{
margin-block-start: 0 !important ;

}
.padding-top-expand{
padding-top: 20px;

}

.side-by-side-container {
  display: flex;
  align-items: center; /* Adjust based on your design needs */
}

.side-by-side-container .text-content,
.side-by-side-container .media-content {
  flex: 1; /* Adjust the flex basis as needed to control width */
}


</style>

{% schema %}
{
"name": "Rich Text 3.0",
"class": "shopify-section--rich-text",
"tag": "section",
"disabled_on": {
  "groups": ["header", "custom.overlay"]
},
"settings": [
  {
    "type": "checkbox",
    "id": "separate_section_with_border",
    "label": "t:global.section.separate_section_with_border",
    "default": true
  },
  {
    "type": "select",
    "id": "content_width",
    "label": "t:global.sizes.content_width",
    "options": [
      {
        "value": "xs",
        "label": "t:global.sizes.x_small"
      },
      {
        "value": "sm",
        "label": "t:global.sizes.small"
      },
      {
        "value": "md",
        "label": "t:global.sizes.medium"
      },
      {
        "value": "lg",
        "label": "t:global.sizes.large"
      }
    ],
    "default": "sm"
  },
  {
    "type": "select",
    "id": "text_position",
    "label": "t:global.position.content_position",
    "options": [
      {
        "value": "start",
        "label": "t:global.position.left"
      },
      {
        "value": "center",
        "label": "t:global.position.center"
      },
      {
        "value": "end",
        "label": "t:global.position.right"
      }
    ],
    "default": "center"
  },
  {
    "type": "checkbox",
    "id": "remove_vertical_spacing",
    "label": "t:global.spacing.remove_vertical_spacing",
    "default": false
  }
],
"blocks": [
  {
    "type": "subheading",
    "name": "t:sections.rich_text.blocks.subheading.name",
    "settings": [
      {
        "type": "inline_richtext",
        "id": "text",
        "label": "t:global.text.text",
        "default": "Subheading"
      }
    ]
  },
  {
    "type": "heading",
    "name": "t:sections.rich_text.blocks.heading.name",
    "settings": [
      {
        "type": "inline_richtext",
        "id": "text",
        "label": "t:global.text.text",
        "default": "Heading"
      },
      {
        "type": "select",
        "id": "heading_tag",
        "label": "t:global.text.style",
        "options": [
          {
            "value": "h1",
            "label": "H1"
          },
          {
            "value": "h2",
            "label": "H2"
          },
          {
            "value": "h3",
            "label": "H3"
          },
          {
            "value": "h4",
            "label": "H4"
          },
          {
            "value": "h5",
            "label": "H5"
          },
          {
            "value": "h6",
            "label": "H6"
          }
        ],
        "default": "h1"
      }
    ]
  },
  {
    "type": "richtext",
    "name": "Richtext 3.0",
    "settings": [
      {
        "type": "richtext",
        "id": "content",
        "label": "t:global.text.content",
        "info": "this is always visisble and can be used without the expandable part",
        "default": "<p>Always visible content here</p>"
      },
      {
        "type": "richtext",
        "id": "content-expand",
        "label": "content expand",
        "info": "if this field is empty, the button will be hidden",
        "default": "<p>expandable content here</p>"
      }
    ]
  },
  {
    "type": "page",
    "name": "t:sections.rich_text.blocks.page.name",
    "settings": [
      {
        "type": "page",
        "id": "page",
        "label": "t:sections.rich_text.blocks.page.page"
      }
    ]
  },
  {
    "type": "link",
    "name": "t:sections.rich_text.blocks.link.name",
    "settings": [
      {
        "type": "text",
        "id": "text",
        "label": "t:global.text.text",
        "default": "Text"
      },
      {
        "type": "url",
        "id": "url",
        "label": "t:global.text.link"
      }
    ]
  },
  {
    "type": "image",
    "name": "t:sections.rich_text.blocks.image.name",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "t:global.image.image",
        "info": "t:sections.rich_text.blocks.image.image_size_recommendation"
      },
      {
        "type": "radio",
        "id": "width_mode",
        "label": "t:global.image.width",
        "options": [
          {
            "value": "full_width",
            "label": "t:global.image.width_options.full_width"
          },
          {
            "value": "custom",
            "label": "t:global.image.width_options.custom"
          }
        ],
        "default": "custom"
      },
      {
        "type": "select",
        "id": "media_alignment",
        "label": "Media Alignment",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "right",
            "label": "Right"
          }
        ],
        "default": "right"
      },
      {
        "type": "range",
        "id": "max_width",
        "min": 100,
        "max": 1000,
        "step": 10,
        "unit": "px",
        "label": "t:global.image.maximum_width",
        "default": 600
      },
      {
        "type": "range",
        "id": "mobile_max_width",
        "min": 100,
        "max": 600,
        "step": 10,
        "unit": "px",
        "label": "t:global.image.mobile_maximum_width",
        "default": 400
      }
    ]
  },
  {
    "type": "video",
    "name": "t:sections.rich_text.blocks.video.name",
    "settings": [
      {
        "type": "video",
        "id": "video",
        "label": "t:global.video.video"
      }
    ]
  },
  {
    "type": "button",
    "name": "t:sections.rich_text.blocks.button.name",
    "settings": [
      {
        "type": "select",
        "id": "style",
        "label": "t:global.text.style",
        "options": [
          {
            "value": "outline",
            "label": "t:global.text.button_style_options.outline"
          },
          {
            "value": "solid",
            "label": "t:global.text.button_style_options.solid"
          }
        ],
        "default": "solid"
      },
      {
        "type": "text",
        "id": "text",
        "label": "t:global.text.text",
        "default": "Button text"
      },
      {
        "type": "url",
        "id": "url",
        "label": "t:global.text.link"
      },
      {
        "type": "color",
        "id": "background",
        "label": "t:global.colors.background"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "t:global.text.text"
      }
    ]
  },
  {
    "type": "liquid",
    "name": "t:sections.rich_text.blocks.liquid.name",
    "settings": [
      {
        "type": "liquid",
        "id": "liquid",
        "label": "t:global.code.liquid",
        "default": "<p>Write custom Liquid code to include widget or dynamic code.</p>"
      }
    ]
  }
],
"presets": [
  {
    "name": "Richtext 3.0",
    "blocks": [
      {
        "type": "subheading",
        "settings": {
          "text": "Subheading"
        }
      },
      {
        "type": "heading",
        "settings": {
          "text": "Heading",
          "heading_tag": "h1"
        }
      },
      {
        "type": "richtext"
      },
      {
        "type": "image",
        "settings": { 
          "image": null, 
          "width_mode": "custom",
          "max_width": 600,
          "mobile_max_width": 400
        }
      }
    ]
  }
]
}
{% endschema %}
